language: cpp
dist: bionic
os: linux  
arch: amd64
git:
  quiet: true
  depth: 5
branches:
  only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
  - /^travis*$/
# except:
#  - /^v\d+\.\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  timeout: 1000
  ccache: true
  directories:
  - $TRAVIS_BUILD_DIR/depends/built
  - $TRAVIS_BUILD_DIR/depends/work/build
  - $TRAVIS_BUILD_DIR/depends/$HOST
  - $TRAVIS_BUILD_DIR/depends/sdk-sources
#  - usr/local/Homebrew
#    - $HOME/Library/Caches/Homebrew
#    - /usr/local/Homebrew
#before_cache:
#  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi
addons:
  apt:
    sources:
    - ppa:bitcoin/bitcoin
    packages:
    - build-essential 
    - libtool 
    - autotools-dev 
    - automake 
    - pkg-config 
    - libssl-dev 
    - libevent-dev 
    - bsdmainutils 
    - python3
    - libboost-all-dev  
    - libboost-system-dev 
    - libboost-filesystem-dev 
    - libboost-chrono-dev 
    - libboost-test-dev 
    - libboost-thread-dev
env:     
  global:
  - CCACHE_COMPRESS=1
  - CCACHE_SIZE=2500M
  - CCACHE_CPP2=1
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - MAKEJOBS="-s -k -j3"
jobs:
  include:
#  - name: Linux ARM 32 Bit
#    addons:
#      apt:
#        packages:
#        - g++-arm-linux-gnueabihf
#        - binutils-arm-linux-gnueabihf
#   env:
#    - XAYA_CONFIG="--enable-glibc-back-compat --with-gui=no"
#    - HOST=arm-linux-gnueabihf
#    - LABEL=ARM
#    os: linux
#  - name: Linux i686 32 Bit
#    addons:
#      apt:
#        packages:
#        - bc
#        - g++-multilib
#        - libprotobuf-dev
#        - libqrencode-dev
#        - python3-zmq
#        - qtdeclarative5-dev
#   env:
#    - XAYA_CONFIG="--enable-zmq --enable-glibc-back-compat
#      --with-gui=qt5 LDFLAGS=-static-libstdc++"
#    - HOST=i686-pc-linux-gnu
#    - LABEL=linux32
#    - PYZMQ=true
#    os: linux
  - name: Linux x86 64 Bit
    addons:
      apt:
        packages:
        - libdb4.8
        - libminiupnpc-dev 
        - libzmq3-dev 
        - libqt5gui5 
        - libqt5core5a 
        - libqt5dbus5 
        - qttools5-dev 
        - qttools5-dev-tools 
        - libprotobuf-dev 
        - protobuf-compiler 
        - libqrencode-dev 
        - libboost-program-options-dev
    env:
    - XAYA_CONFIG="--with-gui=qt5 --enable-zmq --enable-glibc-back-compat"
    - CPPFLAGS="-DDEBUG_LOCKORDER"
    - HOST=x86_64-unknown-linux-gnu
    - LABEL=linux64
    - PYZMQ=true
    os: linux
#  - name: Windows i686 32 Bit
#    addons:
#      apt:
#        packages:
#        - g++-mingw-w64-i686
#        - bc
#        - libprotobuf-dev
#        - libqrencode-dev
#        - linux-libc-dev:i386
#        - nsis
#        - python3
#        - qtdeclarative5-dev
#    env:
#    - XAYA_CONFIG="--with-gui=qt5"
#    - HOST=i686-w64-mingw32
#    - LABEL=win32
#    os: linux
  - name: Windows x86 64 Bit
    addons:
      apt:
        packages:
        - g++-mingw-w64-x86-64
        - libdb4.8
        - libminiupnpc-dev 
        - libzmq3-dev 
        - libqt5gui5 
        - libqt5core5a 
        - libqt5dbus5 
        - qttools5-dev 
        - qttools5-dev-tools 
        - libprotobuf-dev 
        - protobuf-compiler 
        - libqrencode-dev 
        - libboost-program-options-dev
        - nsis
    env:
##    - XAYA_CONFIG="--with-gui=qt5 LDFLAGS=-Wa,-mbig-obj"
    - XAYA_CONFIG="--without-gui --disable-wallet"
    - HOST=x86_64-w64-mingw32
    - LABEL=win64
#    - PYZMQ=true
    os: linux
#  - name: macOS x86 64 Bit
#    cache:
#      directories:
#      - /usr/local/Homebrew
#    env:
#    - CCACHE_HARDLINK=true
#    - CCACHE_SLOPPINESS=file_macro,time_macros,include_file_mtime,include_file_ctime,file_stat_matches
#    - HOST=x86_64-apple-darwin
#    - LABEL=macOS
#    os: osx
#    osx_image: xcode9.2
before_install:
#- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt update; sudo update-alternatives --install /usr/bin/ld ld /usr/bin/ld.gold 20; fi
install:
#- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ninja ccache; export PATH="/usr/local/opt/ccache/libexec:$PATH"; brew uninstall --ignore-dependencies mercurial python; brew bundle; brew link --overwrite --force boost@1.57; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install travis-wait-improved ; fi
- if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then unset CC CXX DISPLAY; fi
#- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export LDFLAGS=-L/usr/local/opt/openssl/lib; export CPPFLAGS=-I/usr/local/opt/openssl/include; fi 
- GLOBAL_CONFIG="--enable-reduce-exports --prefix=$TRAVIS_BUILD_DIR/depends/$HOST"
script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then make --quiet --debug=n $MAKEJOBS -C depends HOST="$HOST"; fi # depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; sh ./autogen.sh; ./configure --cache-file=config.cache $GLOBAL_CONFIG $XAYA_CONFIG; make $MAKEJOBS; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh ./autogen.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./configure --cache-file=config.cache $GLOBAL_CONFIG $XAYA_CONFIG; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then travis-wait-improved --timeout 30m make --quiet --debug=n $MAKEJOBS > /dev/null 2>&1; fi # 1>/dev/null; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sh ./autogen.sh; ./configure --enable-reduce-exports; make deploy; fi
before_deploy:
  - mkdir $TRAVIS_BUILD_DIR/deploy
  - if [[ "$LABEL" == "ARM" ]]; then cp $TRAVIS_BUILD_DIR/src/xaya-cli $TRAVIS_BUILD_DIR/src/xaya-tx $TRAVIS_BUILD_DIR/src/xayad $TRAVIS_BUILD_DIR/deploy; fi
  - if [[ "$LABEL" == "linux64" ]]; then cp $TRAVIS_BUILD_DIR/src/xaya-cli $TRAVIS_BUILD_DIR/src/xaya-tx $TRAVIS_BUILD_DIR/src/xayad $TRAVIS_BUILD_DIR/deploy; cp $TRAVIS_BUILD_DIR/src/qt/xaya-qt $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - if [[ "$LABEL" == "win32" ]]; then cp $TRAVIS_BUILD_DIR/src/xaya-cli.exe $TRAVIS_BUILD_DIR/src/xaya-tx.exe $TRAVIS_BUILD_DIR/src/xayad.exe $TRAVIS_BUILD_DIR/deploy; cp $TRAVIS_BUILD_DIR/src/qt/xaya-qt.exe $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - if [[ "$LABEL" == "win64" ]]; then cp $TRAVIS_BUILD_DIR/src/xaya-cli.exe $TRAVIS_BUILD_DIR/src/xaya-tx.exe $TRAVIS_BUILD_DIR/src/xayad.exe $TRAVIS_BUILD_DIR/deploy; cp $TRAVIS_BUILD_DIR/src/qt/xaya-qt.exe $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp $TRAVIS_BUILD_DIR/CRyptoCrowd-Qt.dmg $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - cd $TRAVIS_BUILD_DIR/deploy
  - ls -lh;
#  - if [[ "$LABEL" == "ARM" ]]; then tar -zvcf xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.tar.gz *; fi
  - if [[ "$LABEL" == "ARM" ]]; then zip -P "$DEVPW" xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
#  - if [[ "$LABEL" == "linux64" ]]; then tar -zvcf xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.tar.gz *; fi
  - if [[ "$LABEL" == "linux64" ]]; then zip -P "$DEVPW" xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
  - if [[ "$LABEL" == "win32" ]]; then zip -P "$DEVPW" xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
  - if [[ "$LABEL" == "win64" ]]; then zip -P "$DEVPW" xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then zip -P "$DEVPW" xaya-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
deploy:
  provider: releases
  token: $GH_TOKEN
  file_glob: true
  file: $TRAVIS_BUILD_DIR/deploy/xaya-bin*
  overwrite: true
  skip_cleanup: true
  draft: true
  name: ${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-${LABEL}
  tag_name: ${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-${LABEL}
  on:
    repo: cryptocrowd-city/xcrc-core-wallet
    all_branches: true
 #   branch: travisci-headless
 #   tags: false #true
